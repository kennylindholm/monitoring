---
- name: Deploy cAdvisor
  hosts: monitoring_servers
  become: true
  gather_facts: true

  vars:
    # Override default variables as needed
    monitoring_base_dir: /opt/monitoring
    monitoring_network_name: monitoring

    # cAdvisor specific configuration
    cadvisor_port: 8080
    cadvisor_log_level: 0 # 0=INFO, 1=WARNING, 2=ERROR
    cadvisor_housekeeping_interval: "10s"
    cadvisor_global_housekeeping_interval: "1m0s"
    cadvisor_max_housekeeping_interval: "15s"
    cadvisor_allow_dynamic_housekeeping: true
    cadvisor_store_container_labels: true
    cadvisor_application_metrics_count_limit: 100

  pre_tasks:
    - name: Display deployment information
      debug:
        msg: |
          Starting cAdvisor deployment...
          Target hosts: {{ ansible_play_hosts | join(', ') }}
          Port: {{ cadvisor_port }}
          Housekeeping interval: {{ cadvisor_housekeeping_interval }}

    - name: Verify connectivity to all hosts
      ping:

    - name: Ensure system is updated
      apt:
        update_cache: yes
        cache_valid_time: 3600
      when: ansible_os_family == "Debian"

    - name: Check if Docker is installed
      command: docker --version
      register: docker_check
      failed_when: false
      changed_when: false

    - name: Fail if Docker is not installed
      fail:
        msg: "Docker is not installed. Please run the docker installation playbook first."
      when: docker_check.rc != 0

    - name: Check if monitoring network exists
      command: docker network inspect {{ monitoring_network_name }}
      register: network_check
      failed_when: false
      changed_when: false

    - name: Create monitoring network if it doesn't exist
      command: docker network create {{ monitoring_network_name }}
      when: network_check.rc != 0

  roles:
    # Deploy common prerequisites first
    - role: monitoring-common
      tags: [common, always]

    # Deploy cAdvisor
    - role: cadvisor
      tags: [cadvisor, exporters, metrics]

  post_tasks:
    - name: Wait for cAdvisor to stabilize
      pause:
        seconds: 15

    - name: Verify cAdvisor is accessible
      uri:
        url: "http://localhost:{{ cadvisor_port }}/healthz"
        method: GET
        status_code: 200
        timeout: 30
      register: cadvisor_health_check
      retries: 3
      delay: 10

    - name: Check cAdvisor metrics endpoint
      uri:
        url: "http://localhost:{{ cadvisor_port }}/metrics"
        method: GET
        status_code: 200
        timeout: 30
      register: cadvisor_metrics_check
      retries: 3
      delay: 10

    - name: Display cAdvisor metrics sample
      debug:
        msg: |
          cAdvisor metrics sample:
          {{ cadvisor_metrics_check.content.split('\n')[:15] | join('\n') }}
      when: cadvisor_metrics_check is succeeded

    - name: Create cAdvisor summary file
      template:
        src: cadvisor-summary.txt.j2
        dest: "{{ monitoring_base_dir }}/CADVISOR_SUMMARY.txt"
        mode: "0644"
      vars:
        deployment_date: "{{ ansible_date_time.iso8601 }}"

    - name: Display access information
      debug:
        msg: |
          ============================================
          cAdvisor Deployment Complete!
          ============================================

          Access URLs:
          - cAdvisor Web UI: http://{{ ansible_default_ipv4.address }}:{{ cadvisor_port }}
          - cAdvisor Metrics: http://{{ ansible_default_ipv4.address }}:{{ cadvisor_port }}/metrics
          - Health Check: http://{{ ansible_default_ipv4.address }}:{{ cadvisor_port }}/healthz

          Key Metrics Available:
          - Container CPU usage: container_cpu_usage_seconds_total
          - Container Memory usage: container_memory_usage_bytes
          - Container Network I/O: container_network_*
          - Container Filesystem usage: container_fs_*
          - Container labels and metadata

          Configuration files: {{ monitoring_base_dir }}/cadvisor

          To check service status:
          docker ps --filter name=cadvisor

          To view logs:
          docker logs cadvisor

          To add to Prometheus scrape config:
          - job_name: 'cadvisor'
            static_configs:
              - targets: ['{{ ansible_default_ipv4.address }}:{{ cadvisor_port }}']

          ============================================

- name: Configure cAdvisor
  hosts: monitoring_servers
  become: true
  gather_facts: false
  tags: [configure, never]

  tasks:
    - name: Configure cAdvisor with custom housekeeping intervals
      lineinfile:
        path: "{{ monitoring_base_dir }}/cadvisor/docker-compose.yml"
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        state: present
      loop:
        - regexp: ".*-housekeeping_interval=.*"
          line: "      - '-housekeeping_interval=5s'"
        - regexp: ".*-global_housekeeping_interval=.*"
          line: "      - '-global_housekeeping_interval=30s'"
        - regexp: ".*-max_housekeeping_interval=.*"
          line: "      - '-max_housekeeping_interval=10s'"
      notify: restart cadvisor

    - name: Enable additional cAdvisor metrics
      lineinfile:
        path: "{{ monitoring_base_dir }}/cadvisor/docker-compose.yml"
        line: "{{ item }}"
        insertafter: "    command:"
        state: present
      loop:
        - "      - '-enable_load_reader=true'"
        - "      - '-docker_only=false'"
        - "      - '-store_container_labels=true'"
      notify: restart cadvisor

    - name: Configure container label whitelist
      lineinfile:
        path: "{{ monitoring_base_dir }}/cadvisor/docker-compose.yml"
        line: "      - '-whitelisted_container_labels=com.docker.compose.service,com.docker.compose.project'"
        insertafter: "    command:"
        state: present
      notify: restart cadvisor

    - name: Set resource limits for cAdvisor
      blockinfile:
        path: "{{ monitoring_base_dir }}/cadvisor/docker-compose.yml"
        marker: "    # {mark} RESOURCE LIMITS"
        insertafter: "    restart:"
        block: |
          deploy:
            resources:
              limits:
                memory: 200M
                cpus: '0.5'
              reservations:
                memory: 100M
                cpus: '0.1'
      notify: restart cadvisor

  handlers:
    - name: restart cadvisor
      command: docker compose -p cadvisor -f {{ monitoring_base_dir }}/cadvisor/docker-compose.yml restart
      args:
        chdir: "{{ monitoring_base_dir }}/cadvisor"

# Advanced configuration playbook for specific container monitoring
- name: Advanced cAdvisor Configuration
  hosts: monitoring_servers
  become: true
  gather_facts: false
  tags: [advanced, never]

  tasks:
    - name: Enable cAdvisor performance profiling
      lineinfile:
        path: "{{ monitoring_base_dir }}/cadvisor/docker-compose.yml"
        line: "      - '-profiling=true'"
        insertafter: "    command:"
        state: present
      when: cadvisor_enable_profiling | default(false)
      notify: restart cadvisor

    - name: Configure cAdvisor storage driver
      lineinfile:
        path: "{{ monitoring_base_dir }}/cadvisor/docker-compose.yml"
        line: "{{ item }}"
        insertafter: "    command:"
        state: present
      loop:
        - "      - '-storage_driver={{ cadvisor_storage_driver }}'"
        - "      - '-storage_driver_host={{ cadvisor_storage_driver_host }}'"
        - "      - '-storage_driver_db={{ cadvisor_storage_driver_db }}'"
      when:
        - cadvisor_storage_driver is defined
        - cadvisor_storage_driver_host is defined
        - cadvisor_storage_driver_db is defined
      notify: restart cadvisor

  handlers:
    - name: restart cadvisor
      command: docker compose -p cadvisor -f {{ monitoring_base_dir }}/cadvisor/docker-compose.yml restart
      args:
        chdir: "{{ monitoring_base_dir }}/cadvisor"
