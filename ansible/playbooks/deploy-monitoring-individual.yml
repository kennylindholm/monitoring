---
- name: Deploy Monitoring Stack with Individual Roles
  hosts: monitoring_servers
  become: yes
  gather_facts: yes

  vars:
    # Override default variables as needed
    monitoring_base_dir: /opt/monitoring
    monitoring_network_name: monitoring

    # Component-specific overrides
    prometheus_retention: "30d"
    grafana_admin_password: "SecurePassword123!"
    loki_retention_period: "744h"

  pre_tasks:
    - name: Ensure system is updated
      apt:
        update_cache: yes
        cache_valid_time: 3600
      when: ansible_os_family == "Debian"

    - name: Ensure system is updated (RedHat)
      yum:
        name: '*'
        state: latest
        update_cache: yes
      when: ansible_os_family == "RedHat"

  roles:
    # Deploy common prerequisites first
    - role: monitoring-common
      tags: [common, always]

    # Deploy core monitoring components
    - role: prometheus
      tags: [prometheus, metrics]
      vars:
        prometheus_scrape_configs:
          - job_name: 'prometheus'
            static_configs:
              - targets: ['localhost:9090']
          - job_name: 'node-exporter'
            static_configs:
              - targets: ['node-exporter:9100']
          - job_name: 'cadvisor'
            static_configs:
              - targets: ['cadvisor:8080']

    - role: alertmanager
      tags: [alertmanager, alerts]
      vars:
        alertmanager_receivers:
          - name: 'default'
            email_configs: []
            slack_configs: []
            webhook_configs: []

    - role: loki
      tags: [loki, logs]

    - role: grafana
      tags: [grafana, visualization]
      vars:
        grafana_datasources:
          - name: Prometheus
            type: prometheus
            access: proxy
            url: "http://prometheus:9090"
            isDefault: true
          - name: Loki
            type: loki
            access: proxy
            url: "http://loki:3100"

    # Deploy exporters
    - role: node-exporter
      tags: [node-exporter, exporters, metrics]

    - role: cadvisor
      tags: [cadvisor, exporters, metrics]

    # Deploy log collectors
    - role: promtail
      tags: [promtail, logs]
      vars:
        promtail_loki_url: "http://loki:3100/loki/api/v1/push"

  post_tasks:
    - name: Wait for all services to stabilize
      pause:
        seconds: 30

    - name: Run service health check
      command: "{{ monitoring_base_dir }}/scripts/check-services.sh"
      register: health_check
      failed_when: health_check.rc != 0
      changed_when: false

    - name: Display health check results
      debug:
        var: health_check.stdout_lines

    - name: Create monitoring summary file
      template:
        src: monitoring-summary.txt.j2
        dest: "{{ monitoring_base_dir }}/MONITORING_SUMMARY.txt"
        mode: '0644'
      vars:
        deployment_date: "{{ ansible_date_time.iso8601 }}"

    - name: Display access information
      debug:
        msg: |
          ============================================
          Monitoring Stack Deployment Complete!
          ============================================

          Access URLs:
          - Prometheus: http://{{ ansible_default_ipv4.address }}:9090
          - Grafana: http://{{ ansible_default_ipv4.address }}:3000
            Username: admin
            Password: {{ grafana_admin_password }}
          - Loki: http://{{ ansible_default_ipv4.address }}:3100
          - Alertmanager: http://{{ ansible_default_ipv4.address }}:9093
          - Node Exporter: http://{{ ansible_default_ipv4.address }}:9100
          - cAdvisor: http://{{ ansible_default_ipv4.address }}:8080
          - Promtail: http://{{ ansible_default_ipv4.address }}:9080

          Configuration files: {{ monitoring_base_dir }}

          To check service status:
          {{ monitoring_base_dir }}/scripts/check-services.sh

          To view logs:
          {{ monitoring_base_dir }}/scripts/view-logs.sh

          ============================================

- name: Configure Monitoring Components
  hosts: monitoring_servers
  become: yes
  gather_facts: no
  tags: [configure, never]

  tasks:
    - name: Configure Prometheus scrape targets
      lineinfile:
        path: "{{ monitoring_base_dir }}/prometheus/configs/prometheus.yml"
        line: "      - targets: ['{{ item }}']"
        insertafter: "    static_configs:"
        state: present
      loop:
        - "app-server-1:8080"
        - "app-server-2:8080"
      notify: reload prometheus
      tags: [prometheus-config]

    - name: Import Grafana dashboards
      uri:
        url: "http://localhost:3000/api/dashboards/db"
        method: POST
        user: admin
        password: "{{ grafana_admin_password }}"
        force_basic_auth: yes
        body_format: json
        body:
          dashboard:
            title: "Custom Application Dashboard"
            panels: []
          overwrite: true
      tags: [grafana-config]

    - name: Configure Alertmanager receivers
      template:
        src: custom-receivers.yml.j2
        dest: "{{ monitoring_base_dir }}/alertmanager/configs/receivers.yml"
      notify: restart alertmanager
      tags: [alertmanager-config]

  handlers:
    - name: reload prometheus
      uri:
        url: "http://localhost:9090/-/reload"
        method: POST

    - name: restart alertmanager
      command: docker restart alertmanager

# Playbook for selective component deployment
- name: Deploy Specific Monitoring Components
  hosts: monitoring_servers
  become: yes
  gather_facts: yes
  tags: [selective, never]

  vars:
    deploy_prometheus: "{{ prometheus | default(false) }}"
    deploy_grafana: "{{ grafana | default(false) }}"
    deploy_loki: "{{ loki | default(false) }}"
    deploy_alertmanager: "{{ alertmanager | default(false) }}"
    deploy_exporters: "{{ exporters | default(false) }}"
    deploy_promtail: "{{ promtail | default(false) }}"

  tasks:
    - name: Deploy Prometheus only
      include_role:
        name: prometheus
      when: deploy_prometheus

    - name: Deploy Grafana only
      include_role:
        name: grafana
      when: deploy_grafana

    - name: Deploy Loki only
      include_role:
        name: loki
      when: deploy_loki

    - name: Deploy Alertmanager only
      include_role:
        name: alertmanager
      when: deploy_alertmanager

    - name: Deploy exporters only
      include_role:
        name: "{{ item }}"
      loop:
        - node-exporter
        - cadvisor
      when: deploy_exporters

    - name: Deploy Promtail only
      include_role:
        name: promtail
      when: deploy_promtail

# Usage examples:
# Deploy everything:
# ansible-playbook -i inventory deploy-monitoring-individual.yml
#
# Deploy with specific tags:
# ansible-playbook -i inventory deploy-monitoring-individual.yml --tags prometheus,grafana
#
# Configure components after deployment:
# ansible-playbook -i inventory deploy-monitoring-individual.yml --tags configure
#
# Deploy specific components only:
# ansible-playbook -i inventory deploy-monitoring-individual.yml --tags selective -e prometheus=true -e grafana=true
