============================================
LOKI DEPLOYMENT SUMMARY
============================================

Deployment Information:
- Deployment Date: {{ deployment_date }}
- Ansible User: {{ ansible_user_id }}
- Target Host: {{ ansible_hostname }} ({{ ansible_default_ipv4.address }})
- Loki Version: {{ loki_version | default('Latest') }}

Configuration Details:
- Base Directory: {{ monitoring_base_dir }}/loki
- Data Path: {{ loki_data_path | default(monitoring_base_dir + '/loki/data') }}
- Configuration Path: {{ loki_config_path | default(monitoring_base_dir + '/loki/configs') }}
- WAL Path: {{ loki_wal_path | default(monitoring_base_dir + '/loki/wal') }}
- HTTP Port: {{ loki_port | default('3100') }}
- gRPC Port: {{ loki_grpc_port | default('9095') }}
- Log Level: {{ loki_log_level | default('info') }}

Access Information:
- Loki API: http://{{ ansible_default_ipv4.address }}:{{ loki_port | default('3100') }}
- Query API: http://{{ ansible_default_ipv4.address }}:{{ loki_port | default('3100') }}/loki/api/v1/
- Metrics Endpoint: http://{{ ansible_default_ipv4.address }}:{{ loki_port | default('3100') }}/metrics
- Config View: http://{{ ansible_default_ipv4.address }}:{{ loki_port | default('3100') }}/config
- Ready Check: http://{{ ansible_default_ipv4.address }}:{{ loki_port | default('3100') }}/ready

Container Information:
- Container Name: loki
- Network: {{ monitoring_network_name | default('monitoring') }}
- Restart Policy: unless-stopped

Storage Configuration:
- Storage Type: {{ loki_chunk_store_config | default('filesystem') }}
- Retention Period: {{ loki_retention_period | default('744h') }}
- Schema Version: {{ loki_schema_config_from | default('2020-10-24') }}
- Multi-tenancy: {{ 'Enabled' if loki_multitenancy_enabled | default(false) else 'Disabled' }}

Key Features Enabled:
- Log Aggregation: ✓
- LogQL Query Language: ✓
- Label-based Indexing: ✓
- Metrics Extraction: ✓
- Data Persistence: ✓
- Retention Management: ✓
- API Access: ✓

Limits Configuration:
- Retention Period: {{ loki_retention_period | default('744h') }}
- Ingestion Rate: {{ loki_limits_config.ingestion_rate_mb | default('4') }}MB/s
- Ingestion Burst: {{ loki_limits_config.ingestion_burst_size_mb | default('6') }}MB
- Max Streams per User: {{ loki_limits_config.max_streams_per_user | default('10000') }}
- Max Line Size: {{ loki_limits_config.max_line_size | default('256KB') }}
- Reject Old Samples: {{ 'Yes' if loki_limits_config.reject_old_samples | default(true) else 'No' }}

Storage Directories:
- Chunks: {{ loki_data_path | default(monitoring_base_dir + '/loki/data') }}/chunks
- BoltDB Active: {{ loki_data_path | default(monitoring_base_dir + '/loki/data') }}/boltdb-shipper-active
- BoltDB Cache: {{ loki_data_path | default(monitoring_base_dir + '/loki/data') }}/boltdb-shipper-cache
- WAL Directory: {{ loki_wal_path | default(monitoring_base_dir + '/loki/wal') }}

Management Commands:
- Check Status: docker ps --filter name=loki
- View Logs: docker logs loki
- Restart Service: docker restart loki
- Check Metrics: curl http://localhost:{{ loki_port | default('3100') }}/metrics
- Test Query: curl http://localhost:{{ loki_port | default('3100') }}/loki/api/v1/labels

Configuration Files:
- Main Config: {{ monitoring_base_dir }}/loki/configs/loki.yml
- Docker Compose: {{ monitoring_base_dir }}/loki/docker-compose.yml
- Rules Directory: {{ loki_data_path | default(monitoring_base_dir + '/loki/data') }}/rules

LogQL Query Examples:
- All logs: {job="app"}
- Error logs: {job="app"} |= "error"
- Rate query: rate({job="app"}[5m])
- JSON parsing: {job="app"} | json | level="error"
- Regex filter: {job="app"} |~ "error|exception"
- Label filter: {job="app", environment="production"}
- Aggregate: sum(rate({job="app"}[5m])) by (level)

API Endpoints:
- Labels: /loki/api/v1/labels
- Label Values: /loki/api/v1/label/{name}/values
- Query: /loki/api/v1/query
- Query Range: /loki/api/v1/query_range
- Tail: /loki/api/v1/tail
- Push: /loki/api/v1/push
- Series: /loki/api/v1/series

Optional Features:
- Clustering: {{ 'Enabled' if loki_clustering_enabled | default(false) else 'Disabled' }}
- Ruler/Alerting: {{ 'Enabled' if loki_ruler_enabled | default(false) else 'Disabled' }}
- S3 Storage: {{ 'Enabled' if loki_storage_backend == 's3' else 'Disabled' }}
- Table Manager: {{ 'Enabled' if loki_table_manager_enabled | default(false) else 'Disabled' }}

Integration Information:
- Grafana Datasource: Add http://loki:3100 as Loki datasource
- Promtail Agent: Deploy on client hosts to ship logs
- Prometheus Scraping: Metrics available at /metrics endpoint
- Alertmanager: Configure ruler for log-based alerts

Next Steps:
1. Deploy Promtail on client hosts to ship logs
2. Configure log retention policies as needed
3. Set up log-based alerting rules
4. Create Grafana dashboards for log visualization
5. Configure log parsing and structured logging
6. Set up backup procedures for log data
7. Monitor Loki performance and storage usage

Common Log Formats Supported:
- Plain text logs
- JSON structured logs
- Syslog format
- Docker container logs
- Kubernetes pod logs
- Apache/Nginx access logs

For more information:
- Loki Documentation: https://grafana.com/docs/loki/
- LogQL Documentation: https://grafana.com/docs/loki/latest/logql/
- Promtail Configuration: https://grafana.com/docs/loki/latest/clients/promtail/

============================================
Loki is ready for log aggregation!
============================================
