# Logrotate configuration for monitoring services
# Generated by Ansible - Do not edit manually
# This configuration handles log rotation for native monitoring services

# Monitoring service logs
{{ monitoring_services_log_dir }}/*.log {
    daily
    rotate {{ monitoring_log_retention_days }}
    maxsize {{ monitoring_log_max_size }}
    compress
    delaycompress
    missingok
    notifempty
    create 644 {{ monitoring_user if monitoring_create_user else 'root' }} {{ monitoring_user if monitoring_create_user else 'root' }}
    postrotate
        # Reload monitoring services to pick up new log files
        systemctl reload-or-restart node_exporter prometheus grafana-server alertmanager loki promtail 2>/dev/null || true
    endscript
}

# Node Exporter logs (if using file logging)
/var/log/node_exporter/*.log {
    daily
    rotate {{ monitoring_log_retention_days }}
    maxsize {{ monitoring_log_max_size }}
    compress
    delaycompress
    missingok
    notifempty
    create 644 node_exporter node_exporter
    postrotate
        systemctl reload-or-restart node_exporter 2>/dev/null || true
    endscript
}

# Prometheus logs
/var/log/prometheus/*.log {
    daily
    rotate {{ monitoring_log_retention_days }}
    maxsize {{ monitoring_log_max_size }}
    compress
    delaycompress
    missingok
    notifempty
    create 644 prometheus prometheus
    postrotate
        systemctl reload-or-restart prometheus 2>/dev/null || true
    endscript
}

# Grafana logs
/var/log/grafana/*.log {
    daily
    rotate {{ monitoring_log_retention_days }}
    maxsize {{ monitoring_log_max_size }}
    compress
    delaycompress
    missingok
    notifempty
    create 644 grafana grafana
    postrotate
        systemctl reload-or-restart grafana-server 2>/dev/null || true
    endscript
}

# Alertmanager logs
/var/log/alertmanager/*.log {
    daily
    rotate {{ monitoring_log_retention_days }}
    maxsize {{ monitoring_log_max_size }}
    compress
    delaycompress
    missingok
    notifempty
    create 644 alertmanager alertmanager
    postrotate
        systemctl reload-or-restart alertmanager 2>/dev/null || true
    endscript
}

# Loki logs
/var/log/loki/*.log {
    daily
    rotate {{ monitoring_log_retention_days }}
    maxsize {{ monitoring_log_max_size }}
    compress
    delaycompress
    missingok
    notifempty
    create 644 loki loki
    postrotate
        systemctl reload-or-restart loki 2>/dev/null || true
    endscript
}

# Promtail logs
/var/log/promtail/*.log {
    daily
    rotate {{ monitoring_log_retention_days }}
    maxsize {{ monitoring_log_max_size }}
    compress
    delaycompress
    missingok
    notifempty
    create 644 promtail promtail
    postrotate
        systemctl reload-or-restart promtail 2>/dev/null || true
    endscript
}

# System journal logs for monitoring services
# Note: systemd-journald handles most log rotation automatically,
# but we can configure additional cleanup for persistent journals

# Cleanup old monitoring service logs from journal
# This is handled by journald.conf settings, but can be supplemented with:
# journalctl --vacuum-time={{ monitoring_log_retention_days }}d
# journalctl --vacuum-size=1G

# Custom monitoring scripts logs
{{ monitoring_scripts_dir }}/*.log {
    weekly
    rotate 4
    maxsize 10M
    compress
    delaycompress
    missingok
    notifempty
    create 644 {{ monitoring_user if monitoring_create_user else 'root' }} {{ monitoring_user if monitoring_create_user else 'root' }}
}

# Backup logs
{{ monitoring_backup_dir }}/*.log {
    weekly
    rotate 8
    maxsize 50M
    compress
    delaycompress
    missingok
    notifempty
    create 644 {{ monitoring_user if monitoring_create_user else 'root' }} {{ monitoring_user if monitoring_create_user else 'root' }}
}

# Service check logs
{{ monitoring_base_dir }}/logs/service-check.log {
    daily
    rotate 30
    maxsize 10M
    compress
    delaycompress
    missingok
    notifempty
    create 644 {{ monitoring_user if monitoring_create_user else 'root' }} {{ monitoring_user if monitoring_create_user else 'root' }}
}
