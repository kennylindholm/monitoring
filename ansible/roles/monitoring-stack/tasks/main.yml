---
- name: Create monitoring stack directory
  file:
    path: "{{ monitoring_stack_dir }}"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0755'

- name: Create monitoring data directories
  file:
    path: "{{ monitoring_stack_dir }}/{{ item }}"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0755'
  loop:
    - prometheus/data
    - grafana/data
    - grafana/provisioning/datasources
    - grafana/provisioning/dashboards
    - loki/data
    - alertmanager/data
    - configs

- name: Copy Docker Compose file for monitoring stack
  template:
    src: docker-compose.yml.j2
    dest: "{{ monitoring_stack_dir }}/docker-compose.yml"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0644'
  notify: restart monitoring stack

- name: Copy Prometheus configuration
  template:
    src: prometheus.yml.j2
    dest: "{{ monitoring_stack_dir }}/configs/prometheus.yml"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0644'
  notify: restart monitoring stack

- name: Copy Loki configuration
  template:
    src: loki-config.yml.j2
    dest: "{{ monitoring_stack_dir }}/configs/loki-config.yml"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0644'
  notify: restart monitoring stack

- name: Copy Alertmanager configuration
  template:
    src: alertmanager.yml.j2
    dest: "{{ monitoring_stack_dir }}/configs/alertmanager.yml"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0644'
  notify: restart monitoring stack

- name: Copy Grafana datasource provisioning
  template:
    src: datasources.yml.j2
    dest: "{{ monitoring_stack_dir }}/grafana/provisioning/datasources/datasources.yml"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0644'
  notify: restart monitoring stack

- name: Copy Grafana dashboard provisioning
  template:
    src: dashboards.yml.j2
    dest: "{{ monitoring_stack_dir }}/grafana/provisioning/dashboards/dashboards.yml"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0644'
  notify: restart monitoring stack

- name: Copy alert rules for Prometheus
  template:
    src: alert-rules.yml.j2
    dest: "{{ monitoring_stack_dir }}/configs/alert-rules.yml"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0644'
  notify: restart monitoring stack

- name: Copy Promtail configuration
  template:
    src: promtail-config.yml.j2
    dest: "{{ monitoring_stack_dir }}/configs/promtail-config.yml"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0644'
  notify: restart monitoring stack

- name: Check if monitoring stack is already running
  command: docker compose -f {{ monitoring_stack_dir }}/docker-compose.yml ps -q
  register: stack_status
  changed_when: false
  failed_when: false

- name: Start monitoring stack
  command: docker compose -f {{ monitoring_stack_dir }}/docker-compose.yml up -d
  args:
    chdir: "{{ monitoring_stack_dir }}"
  when: stack_status.stdout == ""

- name: Wait for services to be ready
  wait_for:
    port: "{{ item.port }}"
    host: "{{ item.host | default('localhost') }}"
    delay: 10
    timeout: 120
  loop:
    - { port: "{{ prometheus_port }}", service: "Prometheus" }
    - { port: "{{ grafana_port }}", service: "Grafana" }
    - { port: "{{ loki_port }}", service: "Loki" }
    - { port: "{{ alertmanager_port }}", service: "Alertmanager" }

- name: Verify services are running
  uri:
    url: "{{ item.url }}"
    method: GET
    status_code: 200
    timeout: 30
  loop:
    - { url: "http://localhost:{{ prometheus_port }}/-/ready", service: "Prometheus" }
    - { url: "http://localhost:{{ grafana_port }}/api/health", service: "Grafana" }
    - { url: "http://localhost:{{ loki_port }}/ready", service: "Loki" }
    - { url: "http://localhost:{{ alertmanager_port }}/-/ready", service: "Alertmanager" }
  register: service_health
  retries: 5
  delay: 10

- name: Display service URLs
  debug:
    msg: |
      Monitoring Stack deployed successfully!
      
      Services are available at:
      - Grafana: http://{{ ansible_default_ipv4.address }}:{{ grafana_port }}
        Default login: admin / {{ grafana_admin_password }}
      - Prometheus: http://{{ ansible_default_ipv4.address }}:{{ prometheus_port }}
      - Loki: http://{{ ansible_default_ipv4.address }}:{{ loki_port }}
      - Alertmanager: http://{{ ansible_default_ipv4.address }}:{{ alertmanager_port }}
      
      Data is persisted in: {{ monitoring_stack_dir }}

- name: Create monitoring stack management script
  template:
    src: manage-stack.sh.j2
    dest: "{{ monitoring_stack_dir }}/manage-stack.sh"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0755'