version: '3.8'

services:
  prometheus:
    image: {{ prometheus_image }}
    container_name: prometheus
    user: "65534:65534"
    ports:
      - "{{ prometheus_port }}:9090"
    volumes:
      - ./configs/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./configs/alert-rules.yml:/etc/prometheus/alert-rules.yml
      - ./prometheus/data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time={{ prometheus_retention }}'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
      - '--storage.tsdb.wal-compression'
    restart: unless-stopped
    networks:
      - {{ monitoring_network_name }}
    depends_on:
      - alertmanager

  grafana:
    image: {{ grafana_image }}
    container_name: grafana
    user: "472:0"
    ports:
      - "{{ grafana_port }}:3000"
    volumes:
      - ./grafana/data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER={{ grafana_admin_user }}
      - GF_SECURITY_ADMIN_PASSWORD={{ grafana_admin_password }}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_DOMAIN={{ grafana_domain }}
      - GF_SMTP_ENABLED=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource,grafana-worldmap-panel
      - GF_FEATURE_TOGGLES_ENABLE=ngalert
    restart: unless-stopped
    networks:
      - {{ monitoring_network_name }}
    depends_on:
      - prometheus
      - loki

  loki:
    image: {{ loki_image }}
    container_name: loki
    user: "10001:10001"
    ports:
      - "{{ loki_port }}:3100"
    volumes:
      - ./configs/loki-config.yml:/etc/loki/local-config.yaml
      - ./loki/data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    restart: unless-stopped
    networks:
      - {{ monitoring_network_name }}

  alertmanager:
    image: {{ alertmanager_image }}
    container_name: alertmanager
    ports:
      - "{{ alertmanager_port }}:9093"
    volumes:
      - ./configs/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - ./alertmanager/data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:{{ alertmanager_port }}'
      - '--web.route-prefix=/'
    restart: unless-stopped
    networks:
      - {{ monitoring_network_name }}

{% if node_exporter_enabled %}
  node-exporter:
    image: {{ node_exporter_image }}
    container_name: node-exporter
    ports:
      - "{{ node_exporter_port }}:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    networks:
      - {{ monitoring_network_name }}
{% endif %}

{% if cadvisor_enabled %}
  cadvisor:
    image: {{ cadvisor_image }}
    container_name: cadvisor
    ports:
      - "{{ cadvisor_port }}:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    restart: unless-stopped
    networks:
      - {{ monitoring_network_name }}
{% endif %}

{% if promtail_enabled %}
  promtail:
    image: {{ promtail_image }}
    container_name: promtail
    volumes:
      - ./configs/promtail-config.yml:/etc/promtail/config.yml
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command: -config.file=/etc/promtail/config.yml
    restart: unless-stopped
    networks:
      - {{ monitoring_network_name }}
    depends_on:
      - loki
{% endif %}

networks:
  {{ monitoring_network_name }}:
    driver: bridge

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  loki_data:
    driver: local
  alertmanager_data:
    driver: local