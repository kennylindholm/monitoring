---
- name: Create Prometheus directories
  file:
    path: "{{ prometheus_base_dir }}/{{ item }}"
    state: directory
    owner: "{{ prometheus_user_id }}"
    group: "{{ prometheus_group_id }}"
    mode: "0755"
  loop:
    - data
    - configs

- name: Copy Prometheus configuration
  template:
    src: prometheus.yml.j2
    dest: "{{ prometheus_base_dir }}/configs/prometheus.yml"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0644"
  notify: restart prometheus

- name: Copy alert rules for Prometheus
  template:
    src: alert-rules.yml.j2
    dest: "{{ prometheus_base_dir }}/configs/alert-rules.yml"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0644"
  notify: restart prometheus
  when: prometheus_alert_rules_enabled

- name: Validate Prometheus configuration
  command: >
    docker run --rm
    -v {{ prometheus_base_dir }}/configs/prometheus.yml:/etc/prometheus/prometheus.yml
    {% if prometheus_alert_rules_enabled %}
    -v {{ prometheus_base_dir }}/configs/alert-rules.yml:/etc/prometheus/alert-rules.yml
    {% endif %}
    --entrypoint promtool
    {{ prometheus_image }}
    check config /etc/prometheus/prometheus.yml
  register: prometheus_config_check
  failed_when: prometheus_config_check.rc != 0
  changed_when: false

- name: Display Prometheus config validation result
  debug:
    msg: "Prometheus config validation: {{ prometheus_config_check.stdout }}"

- name: Copy Docker Compose file for Prometheus
  template:
    src: docker-compose.yml.j2
    dest: "{{ prometheus_base_dir }}/docker-compose.yml"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0644"
  register: prometheus_compose_updated
  notify: restart prometheus

- name: Pull latest Prometheus image
  command: docker compose -p prometheus -f {{ prometheus_base_dir }}/docker-compose.yml pull
  args:
    chdir: "{{ prometheus_base_dir }}"
  register: prometheus_image_pulled
  changed_when: "'Downloaded newer image' in prometheus_image_pulled.stderr or 'Pulled' in prometheus_image_pulled.stderr"

- name: Deploy/Update Prometheus container
  command: docker compose -p prometheus -f {{ prometheus_base_dir }}/docker-compose.yml up -d --force-recreate
  args:
    chdir: "{{ prometheus_base_dir }}"
  when: prometheus_compose_updated.changed or prometheus_image_pulled.changed
  register: prometheus_deployed

- name: Start Prometheus if not running
  command: docker compose -p prometheus -f {{ prometheus_base_dir }}/docker-compose.yml up -d
  args:
    chdir: "{{ prometheus_base_dir }}"
  when: not (prometheus_compose_updated.changed or prometheus_image_pulled.changed)

- name: Wait for Prometheus to be ready
  wait_for:
    port: "{{ prometheus_port }}"
    host: localhost
    delay: 10
    timeout: 120

- name: Verify Prometheus is running
  uri:
    url: "http://localhost:{{ prometheus_port }}/-/ready"
    method: GET
    status_code: 200
    timeout: 30
  register: prometheus_health
  retries: 5
  delay: 10

- name: Display Prometheus URL
  debug:
    msg: |
      Prometheus deployed successfully!

      Service is available at:
      - Prometheus: http://{{ ansible_default_ipv4.address }}:{{ prometheus_port }}

      Data is persisted in: {{ prometheus_base_dir }}
