---
# Main tasks for promtail-host role

- name: Update apt cache
  apt:
    update_cache: yes
    cache_valid_time: 3600
  become: yes
  when: ansible_os_family == "Debian"

- name: Install required packages
  package:
    name:
      - unzip
      - systemd
      - ca-certificates
      - wget
    state: present
  become: yes

- name: Create promtail group
  group:
    name: "{{ promtail_group }}"
    system: yes
  become: yes

- name: Create promtail user
  user:
    name: "{{ promtail_user }}"
    group: "{{ promtail_group }}"
    system: yes
    shell: /bin/false
    home: "{{ promtail_data_dir }}"
    createhome: yes
  become: yes

- name: Create promtail directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ promtail_user }}"
    group: "{{ promtail_group }}"
    mode: "0755"
  loop:
    - "{{ promtail_config_dir }}"
    - "{{ promtail_data_dir }}"
    - /var/log/promtail
  become: yes

- name: Check if promtail is already installed
  stat:
    path: "{{ promtail_bin_path }}"
  register: promtail_binary

- name: Get installed promtail version
  command: "{{ promtail_bin_path }} --version"
  register: installed_version
  changed_when: false
  failed_when: false
  when: promtail_binary.stat.exists

- name: Download promtail binary
  unarchive:
    src: "{{ promtail_download_url }}"
    dest: /tmp
    remote_src: yes
    owner: root
    group: root
    mode: "0755"
  when: >
    not promtail_binary.stat.exists or
    (installed_version.stdout is defined and promtail_version not in installed_version.stdout)
  become: yes

- name: Install promtail binary
  copy:
    src: "/tmp/promtail-linux-{{ promtail_arch_map[ansible_architecture] }}"
    dest: "{{ promtail_bin_path }}"
    owner: root
    group: root
    mode: "0755"
    remote_src: yes
  when: >
    not promtail_binary.stat.exists or
    (installed_version.stdout is defined and promtail_version not in installed_version.stdout)
  become: yes
  notify: restart promtail

- name: Generate promtail configuration
  template:
    src: promtail.yml.j2
    dest: "{{ promtail_config_file }}"
    owner: "{{ promtail_user }}"
    group: "{{ promtail_group }}"
    mode: "0644"
    validate: "{{ promtail_bin_path }} -config.file=%s -check-syntax"
  become: yes
  notify: restart promtail

- name: Create systemd service file
  template:
    src: promtail.service.j2
    dest: /etc/systemd/system/promtail.service
    owner: root
    group: root
    mode: "0644"
  become: yes
  notify:
    - reload systemd
    - restart promtail

- name: Set promtail binary capabilities
  capabilities:
    path: "{{ promtail_bin_path }}"
    capability: "{{ item }}=+ep"
    state: present
  loop: "{{ promtail_cap_add }}"
  become: yes
  when: promtail_cap_add is defined

- name: Check which log files exist
  stat:
    path: "{{ item }}"
  loop:
    - /var/log/syslog
    - /var/log/auth.log
  register: log_files_stat
  become: yes

- name: Ensure existing log files are readable by promtail
  file:
    path: "{{ item.item }}"
    mode: "0644"
  loop: "{{ log_files_stat.results }}"
  when: item.stat.exists
  become: yes
  failed_when: false

- name: Add promtail user to systemd-journal group
  user:
    name: "{{ promtail_user }}"
    groups: systemd-journal
    append: yes
  become: yes
  notify: restart promtail

- name: Start and enable promtail service
  systemd:
    name: promtail
    state: "{{ promtail_service_state }}"
    enabled: "{{ promtail_service_enabled }}"
    daemon_reload: yes
  become: yes

- name: Wait for promtail to start
  wait_for:
    port: "{{ promtail_http_listen_port }}"
    host: 127.0.0.1
    timeout: 30
  when: promtail_service_state == "started"

- name: Check promtail service status
  systemd:
    name: promtail
  register: promtail_status
  become: yes

- name: Verify promtail is running
  uri:
    url: "http://127.0.0.1:{{ promtail_http_listen_port }}/ready"
    method: GET
    status_code: 200
    timeout: 10
  retries: 3
  delay: 5
  when: promtail_service_state == "started"

- name: Display promtail information
  debug:
    msg: |
      Promtail installed successfully!

      Service status: {{ promtail_status.status.ActiveState }}
      Configuration: {{ promtail_config_file }}
      Logs: journalctl -u promtail -f
      Metrics: http://{{ ansible_default_ipv4.address }}:{{ promtail_http_listen_port }}/metrics
      Targets: http://{{ ansible_default_ipv4.address }}:{{ promtail_http_listen_port }}/targets

      Sending logs to: {{ promtail_loki_url }}
